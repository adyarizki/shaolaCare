// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(USER)
  verifiedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  otps       Otp[]
  orders     Order[]
}

model Otp {
  id        String   @id @default(cuid())
  code      String
  expiry    DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        String   @id @default(uuid())
  name      String
  stock     Int
  price     Int
  createdAt DateTime @default(now())
  orders    Order[]
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  total     Float
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Employee {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phone       String
  address     String
  position    String
  department  String
  dateOfBirth DateTime?
  hiredAt     DateTime @default(now())

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Message {
  id        String   @id @default(uuid())
  nama      String
  email     String   @unique
  message   String   
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}
